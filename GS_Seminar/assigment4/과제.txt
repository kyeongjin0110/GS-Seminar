과제.
seminar3 에서 만든 chat program에 직렬화 기능 넣기

Socket library와 flatbuffers library는 포함이 되어 있습니다.
main.cpp에는 seminar3의 내용 중 chat에 대한 예제와, 
seminar4의 내용 중 flatbuffers를 이용한 GamePacket에 대한 내용이 들어 있습니다.

과제는 기존의 문자열만 주고받는 chat program을 문자열 외 임의의 data type을 주고받을 수 있도록 고치는 것입니다.
기존의 chat program은 login과 okay라는 packet 처리를 아래와 같은 문자열이 recv될 경우 처리했습니다.

const string kLoginPacket = "<Login>";
const string kOkayPacket = "<Okay>";

하지만 이것은 근본적인 문제를 갖는데, 만약 client가 메시지창에 "<Login>" 이라고 적는다면 어떻게 될까요?
server는 또 이것을 packet으로 간주하고, map에 넣는 코드를 수행할 것입니다.
또한 login되는 경우에 필요한 추가적인 정보도 얻을 수 없습니다. ex) name과 같은 것들

그러므로 packet들을 아래와 같이 정의합니다.

Login 과정에 필요한 name정보를 추가로 포함시킨다.
LoginPacket
{
	name:string
}

Okay 과정에 필요한 id정보를 추가로 포함시킨다.
즉 client로 하여금 자신의 id가 무엇인지 알도록 한다.
OkayPacket
{
	id:int
}

Chat message에 포함되는 정보로는 입력된 message와 message를 보낸 name정보가 있을 것이다.
MessagePacket
{
	name:string
	message:string
}

이렇게 정의한 후 사용한다면, 먼저 보낼 때 GamePacket으로 만들어서 보내고 (type정보 추가하고),
받을 때 GamePacket으로 만들어서 받으면 될 것입니다.
이처럼 packet들을 flatbuffers로 직렬화하고, GamePacket으로 보내도록 고쳐보세요.



