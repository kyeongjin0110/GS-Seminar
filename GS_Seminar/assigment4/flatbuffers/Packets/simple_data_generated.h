// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_SIMPLEDATA_MYGAME_H_
#define FLATBUFFERS_GENERATED_SIMPLEDATA_MYGAME_H_

#include "flatbuffers/flatbuffers.h"

namespace MyGame {

struct pos;

struct pos FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_X = 4,
    VT_Y = 6,
    VT_Z = 8
  };
  float x() const { return GetField<float>(VT_X, 0.0f); }
  float y() const { return GetField<float>(VT_Y, 0.0f); }
  float z() const { return GetField<float>(VT_Z, 0.0f); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<float>(verifier, VT_X) &&
           VerifyField<float>(verifier, VT_Y) &&
           VerifyField<float>(verifier, VT_Z) &&
           verifier.EndTable();
  }
};

struct posBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_x(float x) { fbb_.AddElement<float>(pos::VT_X, x, 0.0f); }
  void add_y(float y) { fbb_.AddElement<float>(pos::VT_Y, y, 0.0f); }
  void add_z(float z) { fbb_.AddElement<float>(pos::VT_Z, z, 0.0f); }
  posBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  posBuilder &operator=(const posBuilder &);
  flatbuffers::Offset<pos> Finish() {
    auto o = flatbuffers::Offset<pos>(fbb_.EndTable(start_, 3));
    return o;
  }
};

inline flatbuffers::Offset<pos> Createpos(flatbuffers::FlatBufferBuilder &_fbb,
    float x = 0.0f,
    float y = 0.0f,
    float z = 0.0f) {
  posBuilder builder_(_fbb);
  builder_.add_z(z);
  builder_.add_y(y);
  builder_.add_x(x);
  return builder_.Finish();
}

inline const MyGame::pos *Getpos(const void *buf) { return flatbuffers::GetRoot<MyGame::pos>(buf); }

inline bool VerifyposBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<MyGame::pos>(nullptr); }

inline void FinishposBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<MyGame::pos> root) { fbb.Finish(root); }

}  // namespace MyGame

#endif  // FLATBUFFERS_GENERATED_SIMPLEDATA_MYGAME_H_
